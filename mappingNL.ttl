@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix gn: <http://geonames.org/> .
@prefix wb: <http://worldbank.org/> .
@prefix schema:<http://schema.org/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gleif-base: <https://www.gleif.org/ontology/Base/> .
@prefix gn: <http://www.geonames.org/ontology#> .
@base <http://geonames.org/> .


<TriplesMapGeonames>
  a rr:TriplesMap;

  # Define the data source (file location)
  rml:logicalSource [
    rml:source "NL.csv";
    rml:referenceFormulation ql:CSV
  ];

  # Define the subject of the generated statements
  rr:subjectMap [ rr:template "http://geonames.org/Place/{geonameid}/{name}" ;
    rr:class schema:Place ];
	
  # Map the country name to rdfs:label
  rr:predicateObjectMap [ 
    rr:predicate rdfs:label ;
    rr:objectMap [ rml:reference "name" ]
  ] ;

  # Define the object of the population property as an integer
  rr:predicateObjectMap [ 
	rr:predicate dbo:id ;
    rr:objectMap [ rr:template "http://geonames.org/id/{geonameid}" ]
  ] ;
  
    # Define the object of the population property as an integer
  rr:predicateObjectMap [ 
    rr:predicate gn:countryCode ;
    rr:objectMap [ rml:reference "country code" ]
  ] ;
  
  # Define the object of the population property as an integer
  rr:predicateObjectMap [ 
    rr:predicate gn:population ;
    rr:objectMap [ rml:reference "population"; rr:datatype xsd:integer ]
  ] ;
  
  # Define the object of the population property as an integer
  rr:predicateObjectMap [ 
    rr:predicate geo:long ;
    rr:objectMap [ rml:reference "longitude" ; rr:datatype xsd:float ]
  ] ;
  
  # Define the object of the population property as an integer
  rr:predicateObjectMap [ 
    rr:predicate geo:lat ;
    rr:objectMap [ rml:reference "latitude" ; rr:datatype xsd:float ]
  ] ;


  # Map the country name to rdfs:label
  rr:predicate gleif-base:hasNameASCII ;
	rr:predicateObjectMap [ 
    rr:objectMap [ rml:reference "country" ]
  ] .

